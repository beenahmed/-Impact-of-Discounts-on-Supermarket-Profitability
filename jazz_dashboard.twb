<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sample - Superstore' inline='true' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0cp2i811bgv2qp14ufwa6062g066'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/beena/Downloads/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0cp2i811bgv2qp14ufwa6062g066' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0cp2i811bgv2qp14ufwa6062g066' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0cp2i811bgv2qp14ufwa6062g066' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_FD7C155684D2449C8E7A3B54F478C05D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RPK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_FD7C155684D2449C8E7A3B54F478C05D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]))'>
          <table-calc ordering-type='Field'>
            <order field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' />
            <order field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Product Name:nk]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='discount/no discount' datatype='string' name='[Calculation_1262133806156210177]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Discount] &gt; 0 THEN &apos;Yes&apos; ELSE &apos;No&apos; END' />
        <aliases>
          <alias key='&quot;No&quot;' value='no discount' />
          <alias key='&quot;Yes&quot;' value='discount' />
        </aliases>
      </column>
      <column caption='discount percentage' datatype='real' name='[Calculation_1413285867993628672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Discount] / [Sales] * 100' />
      </column>
      <column caption='Calculation2' datatype='boolean' name='[Calculation_1413285868066877442]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1623829150487367682]' />
      </column>
      <column caption='discount/non-discount ' datatype='string' name='[Calculation_1413285868073140228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Discount] &gt; 0 THEN &apos;Discount&apos; ELSE &apos;Non-Discount&apos; END' />
      </column>
      <column caption='orders per customer' datatype='integer' name='[Calculation_1413285868088459270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Order ID])' />
      </column>
      <column caption='duration since last purchase' datatype='integer' name='[Calculation_1413285868088586247]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, MAX([Order Date]), TODAY())' />
      </column>
      <column caption='profit ratio' datatype='real' name='[Calculation_1623829150478909440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='profitable' datatype='boolean' name='[Calculation_1623829150487367682]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
        <aliases>
          <alias key='false' value='unprofitable' />
          <alias key='true' value='profitable' />
        </aliases>
      </column>
      <column caption='profit per order ' datatype='real' name='[Calculation_1623829150492995587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/COUNTD([Order ID])' />
      </column>
      <column caption='sales per customer' datatype='real' name='[Calculation_1623829150493143044]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])/COUNTD([Customer Name])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_7BDA008BB7FD4911B52B30BA417412B3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_FD7C155684D2449C8E7A3B54F478C05D]' role='measure' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='MY' name='[my:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1262133806156210177]' derivation='None' name='[none:Calculation_1262133806156210177:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1413285868073140228]' derivation='None' name='[none:Calculation_1413285868073140228:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1623829150487367682]' derivation='None' name='[none:Calculation_1623829150487367682:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Category,Sub-Category)' hidden='true' name='[Action (Category,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,YEAR(Order Date))' hidden='true' name='[Action (Category,YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tyr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer ID,MONTH(Order Date))' hidden='true' name='[Action (Customer ID,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer ID]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Name,Region)' hidden='true' name='[Action (Customer Name,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (discount/no discount,City,Country)' hidden='true' name='[Action (discount/no discount,City,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (discount/no discount,MONTH(Order Date))' hidden='true' name='[Action (discount/no discount,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (discount/no discount,profitable,City,Country)' hidden='true' name='[Action (discount/no discount,profitable,City,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (discount/non-discount ,Category,MONTH(Order Date))' hidden='true' name='[Action (discount/non-discount ,Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1413285868073140228]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (discount/non-discount ,Category,MY(Order Date))' hidden='true' name='[Action (discount/non-discount ,Category,MY(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1413285868073140228]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[my:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (discount/non-discount ,City,Country)' hidden='true' name='[Action (discount/non-discount ,City,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1413285868073140228]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (discount/non-discount ,profitable,City,Country)' hidden='true' name='[Action (discount/non-discount ,profitable,City,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1413285868073140228]' />
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (order profitable?,City,Country,Region)' hidden='true' name='[Action (order profitable?,City,Country,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (order profitable?,City,Region)' hidden='true' name='[Action (order profitable?,City,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (order profitable?,Country,Region)' hidden='true' name='[Action (order profitable?,Country,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (order profitable?,Customer ID,MONTH(Order Date))' hidden='true' name='[Action (order profitable?,Customer ID,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[Customer ID]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (order profitable?,Region)' hidden='true' name='[Action (order profitable?,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (profitable,City,Country)' hidden='true' name='[Action (profitable,City,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (profitable,City,Country,Region)' hidden='true' name='[Action (profitable,City,Country,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Category)' hidden='true' name='[Tooltip (Category)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (discount/no discount,City,Country)' hidden='true' name='[Tooltip (discount/no discount,City,Country)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (profitable,City,Country)' hidden='true' name='[Tooltip (profitable,City,Country)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/beena/OneDrive/Documents/My Tableau Repository/Datasources/Orders (Sample - Superstore).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/21/2024 05:37:58 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Orders_7BDA008BB7FD4911B52B30BA417412B3' table='[Extract].[Orders_7BDA008BB7FD4911B52B30BA417412B3]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Orders_7BDA008BB7FD4911B52B30BA417412B3' table='[Extract].[Orders_7BDA008BB7FD4911B52B30BA417412B3]' type='table' />
            <relation name='Returns_FD7C155684D2449C8E7A3B54F478C05D' table='[Extract].[Returns_FD7C155684D2449C8E7A3B54F478C05D]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Category]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Category]' />
            <map key='[City]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[City]' />
            <map key='[Country]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Country]' />
            <map key='[Customer ID]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Customer Name]' />
            <map key='[Discount]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Discount]' />
            <map key='[Order Date]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Returns_FD7C155684D2449C8E7A3B54F478C05D].[Order ID]' />
            <map key='[Order ID]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Order ID]' />
            <map key='[Postal Code]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Postal Code]' />
            <map key='[Product ID]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Product ID]' />
            <map key='[Product Name]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Product Name]' />
            <map key='[Profit]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Profit]' />
            <map key='[Quantity]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Quantity]' />
            <map key='[Region]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Region]' />
            <map key='[Returned]' value='[Returns_FD7C155684D2449C8E7A3B54F478C05D].[Returned]' />
            <map key='[Row ID]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Row ID]' />
            <map key='[Sales]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Sales]' />
            <map key='[Segment]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Segment]' />
            <map key='[Ship Date]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Ship Mode]' />
            <map key='[State]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[State]' />
            <map key='[Sub-Category]' value='[Orders_7BDA008BB7FD4911B52B30BA417412B3].[Sub-Category]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='Sample - Superstore' increment-value='%null%' refresh-type='create' rows-inserted='10290' timestamp-start='2024-04-21 05:37:55.850' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_7BDA008BB7FD4911B52B30BA417412B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns_FD7C155684D2449C8E7A3B54F478C05D]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>21</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_FD7C155684D2449C8E7A3B54F478C05D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Returns_FD7C155684D2449C8E7A3B54F478C05D]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>22</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_FD7C155684D2449C8E7A3B54F478C05D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1413285868073140228:nk]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;Discount&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Non-Discount&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1623829150487367682:nk]' type='palette'>
            <map to='#b07aa1'>
              <bucket>false</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1262133806156210177:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:Order Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Pakistan&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Returned' />
        <field-sort-custom-order field='Order ID (Returns)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_7BDA008BB7FD4911B52B30BA417412B3'>
            <properties context=''>
              <relation connection='excel-direct.0cp2i811bgv2qp14ufwa6062g066' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders_7BDA008BB7FD4911B52B30BA417412B3' table='[Extract].[Orders_7BDA008BB7FD4911B52B30BA417412B3]' type='table' />
            </properties>
          </object>
          <object caption='Returns' id='Returns_FD7C155684D2449C8E7A3B54F478C05D'>
            <properties context=''>
              <relation connection='excel-direct.0cp2i811bgv2qp14ufwa6062g066' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns_FD7C155684D2449C8E7A3B54F478C05D' table='[Extract].[Returns_FD7C155684D2449C8E7A3B54F478C05D]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_7BDA008BB7FD4911B52B30BA417412B3' />
            <second-end-point object-id='Returns_FD7C155684D2449C8E7A3B54F478C05D' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter8' name='[Action10_DC45BCA2F56D48EEAA85A5E7E9C445B3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='profit per region' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='sales per category,profit:geo (2),profit per region' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter3' name='[Action4_EB15B268378343C4BB6104623D6CF99D]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w' type='datasource'>
        <exclude-sheet name='category and sales' />
        <exclude-sheet name='kpi' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='sales per category' />
      </command>
    </action>
    <action caption='Filter4' name='[Action6_D17F179D5F254839B43504FE64E5A1A8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='profit:geo (2)' />
      <link caption='Filter4' delimiter=',' escape='\' expression='tsl:discount%20per%20region?%5Bfederated.1tq8aq21dul3dg1c82r4r1sawb9w%5D.%5BState%5D~s0=&lt;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='discount per region' />
      </command>
    </action>
    <action caption='Filter5' name='[Action7_F622D1EE92A84BF9B3DFAC8C5345A131]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='profit:geo (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='profit per region' />
      </command>
    </action>
    <action caption='Filter6' name='[Action8_536D2FADDB5E47B49834A87FD00E1AF2]'>
      <source type='sheet' worksheet='discount per region' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='sales per category' />
      </command>
    </action>
    <action caption='Filter7' name='[Action9_A65AFD455B314D9790C547187BD48053]'>
      <source dashboard='Dashboard 4' type='sheet' worksheet='profit:geo (2)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='discount per region,profit:geo (2),profit per region' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <datasources>
      <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
    </datasources>
    <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='category and sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>category and sales &#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[tyr:Order Date:qk]' field-type='quantitative' max='#2017-01-20 05:17:17.255#' min='#2013-11-24 17:41:34.826#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' field-type='quantitative' max='124715.73249077718' min='1350.3760622988411' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</rows>
        <cols>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{77E030C9-CB4F-441E-9188-126BC9E7EC7B}' />
    </worksheet>
    <worksheet name='discount per region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>State-wise Discount Analysis</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column caption='discount/no discount' datatype='string' name='[Calculation_1262133806156210177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Discount] &gt; 0 THEN &apos;Yes&apos; ELSE &apos;No&apos; END' />
              <aliases>
                <alias key='&quot;No&quot;' value='no discount' />
                <alias key='&quot;Yes&quot;' value='discount' />
              </aliases>
            </column>
            <column caption='profitable' datatype='boolean' name='[Calculation_1623829150487367682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
              <aliases>
                <alias key='false' value='unprofitable' />
                <alias key='true' value='profitable' />
              </aliases>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1262133806156210177]' derivation='None' name='[none:Calculation_1262133806156210177:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D17F179D5F254839B43504FE64E5A1A8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (profitable,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_DC45BCA2F56D48EEAA85A5E7E9C445B3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (profitable,City,Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Longitude (generated)]' field-type='quantitative' max='-8121137.0625332538' min='-13524258.605818162' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Latitude (generated)]' field-type='quantitative' max='5684355.4622612987' min='2002030.1316388589' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Country:nk]' />
              <lod column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]' />
              <color column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'><![CDATA[<Sheet name="profit per region" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'><![CDATA[Sheet name="sales per category" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run fontcolor='#787878'>&gt;</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run fontcolor='#787878'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1262133806156210177:nk] * [federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Latitude (generated)])</rows>
        <cols>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{55D8CA0B-7163-4CD1-9410-10F9F63825D2}' />
    </worksheet>
    <worksheet name='kpi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>overview-profitability(&lt;</run>
            <run>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[State]</run>
            <run>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column caption='profit ratio' datatype='real' name='[Calculation_1623829150478909440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column caption='profit per order ' datatype='real' name='[Calculation_1623829150492995587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/COUNTD([Order ID])' />
            </column>
            <column caption='sales per customer' datatype='real' name='[Calculation_1623829150493143044]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])/COUNTD([Customer Name])' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1623829150478909440]' derivation='User' name='[usr:Calculation_1623829150478909440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1623829150492995587]' derivation='User' name='[usr:Calculation_1623829150492995587:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1623829150493143044]' derivation='User' name='[usr:Calculation_1623829150493143044:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150492995587:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150493143044:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150492995587:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150493143044:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;New Mexico&quot;' user:ui-action-filter='[Action1_F998B82265004479BEF13C3B43244245]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[:Measure Names]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Profit:qk]' value='C1078%' />
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150492995587:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150493143044:qk]' value='C1078%' />
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[avg:Discount:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1C7F5D72-992F-4566-AD78-6EE117CD4E18}' />
    </worksheet>
    <worksheet name='kpi 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit Discount wise&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column caption='discount/no discount' datatype='string' name='[Calculation_1262133806156210177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Discount] &gt; 0 THEN &apos;Yes&apos; ELSE &apos;No&apos; END' />
              <aliases>
                <alias key='&quot;No&quot;' value='no discount' />
                <alias key='&quot;Yes&quot;' value='discount' />
              </aliases>
            </column>
            <column caption='profitable' datatype='boolean' name='[Calculation_1623829150487367682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
              <aliases>
                <alias key='false' value='unprofitable' />
                <alias key='true' value='profitable' />
              </aliases>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1262133806156210177]' derivation='None' name='[none:Calculation_1262133806156210177:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (profitable,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_DC45BCA2F56D48EEAA85A5E7E9C445B3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (profitable,City,Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Profit:qk]' field-type='quantitative' max='102106.05203442769' min='-23697.683080187831' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#f1ce63' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[mn:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Profit:qk]</rows>
        <cols>([federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1262133806156210177:nk] / [federated.1tq8aq21dul3dg1c82r4r1sawb9w].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{F80A1961-F923-4D7B-A334-0D5DCF603626}' />
    </worksheet>
    <worksheet name='kpi2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit with no Discount&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{9BF85F69-46A0-45A6-9C9C-733910696C76}' />
    </worksheet>
    <worksheet name='profit per region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Profitability Status Across States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column caption='discount/no discount' datatype='string' name='[Calculation_1262133806156210177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Discount] &gt; 0 THEN &apos;Yes&apos; ELSE &apos;No&apos; END' />
              <aliases>
                <alias key='&quot;No&quot;' value='no discount' />
                <alias key='&quot;Yes&quot;' value='discount' />
              </aliases>
            </column>
            <column caption='profitable' datatype='boolean' name='[Calculation_1623829150487367682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
              <aliases>
                <alias key='false' value='unprofitable' />
                <alias key='true' value='profitable' />
              </aliases>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1623829150487367682]' derivation='None' name='[none:Calculation_1623829150487367682:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action7_F622D1EE92A84BF9B3DFAC8C5345A131]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (discount/no discount,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 15 (2)]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (profitable,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 15 (2)]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' included-values='in-range'>
            <min>2019.0</min>
            <max>101802.0</max>
          </filter>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (profitable,City,Country)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (discount/no discount,City,Country)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Longitude (generated)]' field-type='quantitative' max='-11149646.701703817' min='-11150493.092911538' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Latitude (generated)]' field-type='quantitative' max='3529013.1898331549' min='3528586.6301992605' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Country:nk]' />
              <lod column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]' />
              <color column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'><![CDATA[<Sheet name="sales per category" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>profitable:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1623829150487367682:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>City:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1623829150487367682:nk] * [federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Latitude (generated)])</rows>
        <cols>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{683E66C7-DF59-49D9-ABE2-ECB1D2C9A2CB}' />
    </worksheet>
    <worksheet name='profit:city'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column caption='profit ratio' datatype='real' name='[Calculation_1623829150478909440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1623829150478909440]' derivation='User' name='[usr:Calculation_1623829150478909440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action - profit:city]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' max='0.5' min='-0.5' num-steps='6' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]</rows>
        <cols>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{CA0EF52A-4111-4061-BF2D-81E1972245AE}' />
    </worksheet>
    <worksheet name='profit:geo (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State wise division</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column caption='profit ratio' datatype='real' name='[Calculation_1623829150478909440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1623829150478909440]' derivation='User' name='[usr:Calculation_1623829150478909440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' included-values='in-range'>
            <min>-0.21686405359820984</min>
            <max>0.36983661545120106</max>
          </filter>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' max='0.5' min='-0.5' num-steps='8' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' />
              <color column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' />
              <text column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:State:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:State:nk]> <[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]> overall profit raio]]></run>
                <run><![CDATA[
<Sheet name="profit:city" maxwidth="300" maxheight="300" filter="<All Fields>">
]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{53D6B033-BAF3-4E1C-8CB9-3662557B0C95}' />
    </worksheet>
    <worksheet name='sales per category'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales per subcategory and category
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
          </datasources>
          <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
            <column caption='discount/no discount' datatype='string' name='[Calculation_1262133806156210177]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Discount] &gt; 0 THEN &apos;Yes&apos; ELSE &apos;No&apos; END' />
              <aliases>
                <alias key='&quot;No&quot;' value='no discount' />
                <alias key='&quot;Yes&quot;' value='discount' />
              </aliases>
            </column>
            <column caption='discount/non-discount ' datatype='string' name='[Calculation_1413285868073140228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Discount] &gt; 0 THEN &apos;Discount&apos; ELSE &apos;Non-Discount&apos; END' />
            </column>
            <column caption='profitable' datatype='boolean' name='[Calculation_1623829150487367682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Order ID]: SUM([Profit]) }&gt;0' />
              <aliases>
                <alias key='false' value='unprofitable' />
                <alias key='true' value='profitable' />
              </aliases>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='MY' name='[my:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Category,YEAR(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_4580AE9A0E844B1D80F79BB35571DD77]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tyr:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Customer ID,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer ID]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Customer Name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer Name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_8067345F7CCB4E6EA29B79473BAC6058]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Sub-Category)]'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/no discount,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/no discount,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/non-discount ,Category,MONTH(Order Date))]' />
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/non-discount ,Category,MY(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1413285868073140228]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[my:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (order profitable?,City,Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (order profitable?,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (profitable,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_EB15B268378343C4BB6104623D6CF99D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (discount/no discount,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1262133806156210177]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (profitable,City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1623829150487367682]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Category,YEAR(Order Date))]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/non-discount ,Category,MONTH(Order Date))]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Category,Sub-Category)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (State)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Customer ID,MONTH(Order Date))]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Customer Name,Region)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/non-discount ,Category,MY(Order Date))]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (order profitable?,Region)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (order profitable?,City,Country,Region)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (profitable,City,Country)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/no discount,City,Country)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (Sub-Category)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (profitable,City,Country)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Tooltip (discount/no discount,City,Country)]</column>
            <column>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Action (discount/no discount,MONTH(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' field-type='quantitative' max='343959.32222470891' min='-9811.1936906452447' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</rows>
        <cols>([federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk] / [federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{409C053D-0109-42EB-BF72-D62840ECCCD3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='1000' maxwidth='1700' minheight='1000' minwidth='1700' preset-index='4' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sample - Superstore' name='federated.1tq8aq21dul3dg1c82r4r1sawb9w' />
      </datasources>
      <datasource-dependencies datasource='federated.1tq8aq21dul3dg1c82r4r1sawb9w'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='7' param='horz' type-v2='layout-flow' w='99058' x='471' y='800'>
            <zone h='98400' id='5' type-v2='layout-basic' w='81764' x='471' y='800'>
              <zone h='29533' id='3' name='profit:geo (2)' w='39529' x='471' y='10600'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29533' id='10' name='discount per region' w='40882' x='471' y='69667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39333' id='13' name='profit per region' w='42235' x='40000' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29533' id='16' name='sales per category' w='40882' x='41353' y='69667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='9800' id='24' type-v2='text' w='39529' x='471' y='800'>
                <formatted-text>
                  <run fontcolor='#000000' fontname='ui-sans-serif' fontsize='16'>Influence of Sales Discounts on Profitability Across U.S. States</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29534' id='25' name='kpi 1' w='81764' x='471' y='40133'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='294' h='98400' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='17294' x='82235' y='800'>
              <zone h='6100' id='8' mode='checkdropdown' name='profit:geo (2)' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type-v2='filter' w='17294' x='82235' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7300' id='9' name='profit:geo (2)' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' type-v2='color' w='17294' x='82235' y='6900'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15100' id='11' name='discount per region' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type-v2='filter' w='17294' x='82235' y='14200'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7300' id='12' name='discount per region' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' type-v2='color' w='17294' x='82235' y='29300'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5500' id='14' name='profit per region' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='17294' x='82235' y='36600'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15100' id='15' name='profit per region' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type-v2='filter' w='17294' x='82235' y='42100'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21000' id='17' name='sales per category' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk]' type-v2='color' w='17294' x='82235' y='57200'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21000' id='26' name='kpi 1' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[mn:Order Date:ok]' type-v2='color' w='17294' x='82235' y='78200'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='29' param='vert' type-v2='layout-flow' w='99058' x='471' y='800'>
                <zone forceUpdate='true' h='9800' id='24' type-v2='text' w='39529' x='471' y='800'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='ui-sans-serif' fontsize='16'>Influence of Sales Discounts on Profitability Across U.S. States</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='14' name='profit per region' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='17294' x='82235' y='36600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15100' id='15' mode='checkdropdown' name='profit per region' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type-v2='filter' w='17294' x='82235' y='42100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39333' id='13' is-fixed='true' name='profit per region' w='42235' x='40000' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6100' id='8' mode='checkdropdown' name='profit:geo (2)' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type-v2='filter' w='17294' x='82235' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29533' id='3' is-fixed='true' name='profit:geo (2)' w='39529' x='471' y='10600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7300' id='9' name='profit:geo (2)' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' type-v2='color' w='17294' x='82235' y='6900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29534' id='25' is-fixed='true' name='kpi 1' w='81764' x='471' y='40133'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21000' id='26' name='kpi 1' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[mn:Order Date:ok]' type-v2='color' w='17294' x='82235' y='78200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15100' id='11' mode='checkdropdown' name='discount per region' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type-v2='filter' w='17294' x='82235' y='14200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29533' id='10' is-fixed='true' name='discount per region' w='40882' x='471' y='69667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7300' id='12' name='discount per region' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' type-v2='color' w='17294' x='82235' y='29300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29533' id='16' is-fixed='true' name='sales per category' w='40882' x='41353' y='69667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21000' id='17' name='sales per category' pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk]' type-v2='color' w='17294' x='82235' y='57200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{18B2E0B9-977C-43D4-B4AB-69D0918DBAA8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='category and sales'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Customer Name:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Product Name:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Row ID:ok]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6710B8FB-4AF3-4CCE-BA33-1D7C1F51463B}' />
    </window>
    <window class='worksheet' name='profit:geo (2)'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card mode='checkdropdown' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23E0CB1F-8385-4F0A-9401-5E12FB472FF1}' />
    </window>
    <window class='worksheet' name='kpi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A26345FF-3E53-40CF-A835-A29F34C8D922}' />
    </window>
    <window class='worksheet' name='sales per category'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA6EECFD-1189-46F7-81A3-1E324169A285}' />
    </window>
    <window class='worksheet' name='profit:city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[usr:Calculation_1623829150478909440:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{38C42968-9566-4EDA-94BE-DD573BF81746}' />
    </window>
    <window class='worksheet' name='discount per region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1262133806156210177:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Category:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Country:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Customer ID:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:State:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3965327C-58FA-4F15-9957-2FA94F4B1350}' />
    </window>
    <window class='worksheet' name='profit per region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1413285868073140228:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1623829150487367682:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Country:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Customer ID:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Region:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:State:nk]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F590E668-3726-4E55-B78D-E5B94D0BC764}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='discount per region'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1262133806156210177:nk]</field>
                      <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Calculation_1262133806156210177:nk]</field>
                    <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:City:nk]</field>
                    <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Country:nk]</field>
                    <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[sum:Sales:qk]</field>
                    <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Latitude (generated)]</field>
                    <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Yes&quot;</value>
                  <value>&quot;Conroe&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>111.67200000000001</value>
                  <value>30.3119</value>
                  <value>-95.4561</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='kpi 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[mn:Order Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='profit per region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='profit:geo (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sales per category'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[none:Sub-Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <device-preview visible='true' />
      <simple-id uuid='{D4ECBE88-FD08-4141-8957-739A17313F46}' />
    </window>
    <window class='worksheet' name='kpi 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[mn:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[mn:Order Date:ok]</field>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2971955-E331-4310-B6D6-AFA0629FEF44}' />
    </window>
    <window class='worksheet' name='kpi2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tq8aq21dul3dg1c82r4r1sawb9w].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5175863E-0E3D-49EA-9BE7-B56500B5CFCE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='category and sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='discount per region' width='192'>
      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
      FbZ1n7Tz/wOViqI9XqCMBgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='65' name='kpi' width='192'>
      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
      u/5GqukAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='kpi 1' width='192'>
      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
      BK7m/wONpriFY6PHsgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='kpi2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='profit per region' width='192'>
      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
      uQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='profit:city' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='profit:geo (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sales per category' width='192'>
      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
      4/XYNBu1XtckRM8cew4wPDKOZpug+XtZjxA9dWQAXr94ytBQjLXkrnwWSFxpRwbAaTf4b3/z
      P/jlX/xrLKPe65qE6Jkj3we4+/AX3HnwcxQFJgcf9romIXrmyAAoioLy9iuAmtbTeoToKflG
      mHA1CYBwNQmAcLWuAuA4Dnq1SLNjUy3leP36NXrbIp3aoN5so+s6ZruF3myfV71CnKnungEc
      m63Ec/INm81Uir6BYcxKBtMbJbmxRmZvl9VEAs17tXvJiKujqyNVUTUmJyYoA7duL1LNbfJ6
      u8PN2wsYtRL1cp6OEsGnKdIZTjrDXQrd9Qa1DJLbeYyQBlGVYlHn1sIc2+tLRAdGicWiBD1Q
      qOoMSWc46Qx3CXTXG1Tzc++nvzi4PXVt/2f//U/PtCghekWuAglXkwAIV5MACFeTAAhXkwAI
      V5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFfrybcdfr/2f/j9+t+f
      ePm5wXn+3cN/f44VCbGvJwHI1jO83H124uU1Rbpxid6Ql0DC1SQAwtWu9jeeL5D1QpMnqZP/
      sZF4wMNv7gycY0UCJAA9YzvQtk7eWqV9ilYwontdd4ZLbyxTadlUi1levl7BtExWll6zV6hQ
      Kpdo1kpUGsZ51SvEmeruGcBxUM0G1ZaNni1xczrGd0+XuD43S3FvG+wObRMW7y1i2zaO4xz8
      7Goz7I97x7a7G78/5mwfQR26nMN7cz/NPoCzn4NCd52BbMeBM67hounqGUBRVaKRyMFOVBQ4
      dFw4NrblcIr7WlxIV/+O7LozXGqvhhVIMTXUx3KqzIMHt1hbWaF/ZAqfahHye6jWmwzEQiiK
      gqqqB39s46QU9se9o6rdjd8fc7YXuJQuu6q9P/fT7AM4+zl0vX1FhY9cw3nrujPc3c8eHdzu
      HxoF4NadxUPLyd+VFJfF1Y63EH+Eay6D/tdvv6RtnbzT8a9v3mUi3neOFYmLwDUB2K1VMLpo
      9d264m3BxT55CSRcTQIgXE0CIFxNAiBcTQIgXM01V4GEAPjr//yfsC3r4LYEQLjK6soy1nuX
      uOUlkHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwtVN/FqiQ3WEv
      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
    </thumbnail>
  </thumbnails>
</workbook>
